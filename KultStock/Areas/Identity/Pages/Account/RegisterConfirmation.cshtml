@page
@model RegisterConfirmationModel
@{
    ViewData["Title"] = "Register confirmation";
}
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
<head>
    <title>KultStock</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="KultStock project">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewData["Title"] - KultStock</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" type="text/css" href="~/styles/bootstrap4/bootstrap.min.css">
    <link href="~/plugins/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" type="text/css" href="~/plugins/OwlCarousel2-2.2.1/owl.carousel.css">
    <link rel="stylesheet" type="text/css" href="~/plugins/OwlCarousel2-2.2.1/owl.theme.default.css">
    <link rel="stylesheet" type="text/css" href="~/plugins/OwlCarousel2-2.2.1/animate.css">
    <link rel="stylesheet" type="text/css" href="~/styles/main_styles.css">
    <link rel="stylesheet" type="text/css" href="~/styles/responsive.css">

</head>
<h1>@ViewData["Title"]</h1>
<div class="super_container" style="padding-top:200px;">
    @{
        if (@Model.DisplayConfirmAccountLink)
        {
            <p>
                This app does not currently have a real email sender registered, see <a href="https://aka.ms/aspaccountconf">these docs</a> for how to configure a real email sender.
                Normally this would be emailed: <a id="confirm-link" href="@Model.EmailConfirmationUrl">Click here to confirm your account</a>
            </p>
        }
        else
        {
            <p>
                Please check your email to confirm your account.
            </p>
        }
    }
</div>